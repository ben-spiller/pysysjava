name: Doc-Release

on:
  # When a new (empty) release is created via the GitHub UI, uploads the files to that release, upload it to PyPi 
  # and upload the doc to GitHub pages. Only do this when all the tests are passing. 
  # Requires defining secrets PYPI_USERNAME and PYPI_PASSWORD with your PyPi credentials. 
  release:
    types:
      - created

  # Also, on every commit to the main branch, build the HTML documentation using Sphinx to make sure it's not broken
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache Python deps (get location)
        id: pip-cache
        run: |
            python -m pip install -U "pip>=20.1"
            echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache Python deps
        uses: actions/cache@v2
        with:
            path: ${{ steps.pip-cache.outputs.dir }}
            key: generate-doc-pip

      - name: Python dependencies - install
        id: deps
        run: |
          # For building the Python plugin
          pip install --upgrade setuptools wheel

          # For building the documentation (needs PySys)
          pip install pysys
          # Peg these versions so we only upgrade when we want to
          pip install docutils==0.16 sphinx==3.0.1 sphinx_rtd_theme==0.4.3 sphinx-autodocgen==1.2

          # Check it can be built and installed
          python setup.py bdist_wheel

      - name: Python packaging
        shell: bash
        run: |
          python setup.py bdist_wheel

      - name: Sphinx
        shell: bash
        run: |
          mkdir docs/_build
          
          # Build the documentation with warnings as errors so we notice problems
          python -m sphinx -M html docs docs/_build -w docs/_build/doc_warnings.txt -W

          # Include some other useful files with the documentation
          cp *.rst LICENSE docs/_build/autodocgen_documented_items.txt docs/_build/html/
          cd docs/_build/html/
          zip -r --quiet ../../../docs.zip .
          
      #- name: Upload doc as an artifact
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: docs
      #    path: docs/_build/html/*

      - name: Upload to gh-pages
        if: github.event_name == 'release'
        uses: JamesIves/github-pages-deploy-action@3.5.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/_build/html/

      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        id: upload-release-asset 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          file: dist/*.whl

      - name: Upload to PyPi
        if: github.event_name == 'release'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          # Test repo:
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*.whl
          
          # Real repo:
          #twine upload dist/*.whl
